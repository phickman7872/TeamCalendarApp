// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeamCalendarApp.Data;

namespace TeamCalendarApp.Migrations
{
    [DbContext(typeof(TeamCalendarDataContext))]
    [Migration("20181217164036_InitialCommit")]
    partial class InitialCommit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TeamCalendarApp.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("Name");

                    b.Property<string>("UserCreated");

                    b.Property<string>("UserUpdated");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new { DepartmentId = 1, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 116, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 117, DateTimeKind.Local), Name = "Account Reps", UserCreated = "System", UserUpdated = "System" },
                        new { DepartmentId = 2, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 118, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 118, DateTimeKind.Local), Name = "Finance", UserCreated = "System", UserUpdated = "System" },
                        new { DepartmentId = 3, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 118, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 118, DateTimeKind.Local), Name = "Hardware Engineering", UserCreated = "System", UserUpdated = "System" },
                        new { DepartmentId = 4, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 118, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 118, DateTimeKind.Local), Name = "Marketing", UserCreated = "System", UserUpdated = "System" },
                        new { DepartmentId = 5, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 118, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 118, DateTimeKind.Local), Name = "Monitoring Center", UserCreated = "System", UserUpdated = "System" },
                        new { DepartmentId = 6, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 118, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 118, DateTimeKind.Local), Name = "Production", UserCreated = "System", UserUpdated = "System" },
                        new { DepartmentId = 7, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 118, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 118, DateTimeKind.Local), Name = "Sales", UserCreated = "System", UserUpdated = "System" },
                        new { DepartmentId = 8, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 118, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 118, DateTimeKind.Local), Name = "Software Engineering", UserCreated = "System", UserUpdated = "System" },
                        new { DepartmentId = 9, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 118, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 118, DateTimeKind.Local), Name = "Supply Chain", UserCreated = "System", UserUpdated = "System" }
                    );
                });

            modelBuilder.Entity("TeamCalendarApp.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("EndsAt");

                    b.Property<int>("EventTypeId");

                    b.Property<bool>("IsFullDay");

                    b.Property<DateTime>("StartsAt");

                    b.Property<string>("ThemeColor");

                    b.Property<string>("Title");

                    b.Property<string>("UserCreated");

                    b.Property<int?>("UserId");

                    b.Property<string>("UserUpdated");

                    b.Property<string>("Username");

                    b.HasKey("EventId");

                    b.HasIndex("EventTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("TeamCalendarApp.Models.EventType", b =>
                {
                    b.Property<int>("EventTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<string>("Prefix");

                    b.Property<string>("ThemeColor");

                    b.Property<string>("UserCreated");

                    b.Property<string>("UserUpdated");

                    b.HasKey("EventTypeId");

                    b.ToTable("EventTypes");

                    b.HasData(
                        new { EventTypeId = 1, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 120, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 120, DateTimeKind.Local), Description = "1/2 Vacation Day - AM", Name = "1/2 Vacation Day (AM)", Prefix = "1/2 VAM", ThemeColor = "Olive", UserCreated = "system", UserUpdated = "system" },
                        new { EventTypeId = 2, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 120, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 120, DateTimeKind.Local), Description = "1/2 Vacation Day - PM", Name = "1/2 Vacation Day (PM)", Prefix = "1/2 VPM", ThemeColor = "Blue", UserCreated = "system", UserUpdated = "system" },
                        new { EventTypeId = 3, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 120, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 120, DateTimeKind.Local), Description = "Appointment", Name = "Appointment", Prefix = "D", ThemeColor = "DarkRed", UserCreated = "system", UserUpdated = "system" },
                        new { EventTypeId = 4, DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Description = "Company Holiday", Name = "Company Holiday", Prefix = "C", ThemeColor = "DarkSlateGray" },
                        new { EventTypeId = 5, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 120, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 120, DateTimeKind.Local), Description = "Personal Holiday", Name = "Personal Holiday", Prefix = "P", ThemeColor = "Purple", UserCreated = "system", UserUpdated = "system" },
                        new { EventTypeId = 6, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 120, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 120, DateTimeKind.Local), Description = "Sick Day", Name = "Sick Day", Prefix = "S", ThemeColor = "CadetBlue", UserCreated = "system", UserUpdated = "system" },
                        new { EventTypeId = 7, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 120, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 120, DateTimeKind.Local), Description = "Work From Home Day", Name = "Work From Home Day", Prefix = "WFH", ThemeColor = "DarkCyan", UserCreated = "system", UserUpdated = "system" },
                        new { EventTypeId = 8, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 120, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 120, DateTimeKind.Local), Description = "Work From Home in the AM", Name = "1/2 Work From Home (AM)", Prefix = "WFA", ThemeColor = "DarkCyan", UserCreated = "system", UserUpdated = "system" },
                        new { EventTypeId = 9, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 120, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 120, DateTimeKind.Local), Description = "Work From Home in the PM", Name = "1/2 Work From Home (PM)", Prefix = "WFP", ThemeColor = "DarkCyan", UserCreated = "system", UserUpdated = "system" },
                        new { EventTypeId = 10, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 120, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 120, DateTimeKind.Local), Description = "Vacation Day", Name = "Vacation Day", Prefix = "V", ThemeColor = "Green", UserCreated = "system", UserUpdated = "system" }
                    );
                });

            modelBuilder.Entity("TeamCalendarApp.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<int>("DepartmentId");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsManager");

                    b.Property<bool>("IsSiteManager");

                    b.Property<string>("LastName");

                    b.Property<int>("ReportsTo");

                    b.Property<string>("UserCreated");

                    b.Property<string>("UserUpdated");

                    b.Property<string>("Username");

                    b.HasKey("UserId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Users");

                    b.HasData(
                        new { UserId = 1, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 119, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 119, DateTimeKind.Local), DepartmentId = 8, EmailAddress = "RBuffington@attentigroup.com", FirstName = "Randy", IsManager = true, IsSiteManager = true, LastName = "Buffington", ReportsTo = 0, UserCreated = "system", UserUpdated = "system", Username = "RBuffington" },
                        new { UserId = 2, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 119, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 119, DateTimeKind.Local), DepartmentId = 8, EmailAddress = "DEllingsworth@attentigroup.com", FirstName = "Don", IsManager = true, IsSiteManager = false, LastName = "Ellingsworth", ReportsTo = 1, UserCreated = "system", UserUpdated = "system", Username = "DEllingsworth" },
                        new { UserId = 3, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 119, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 119, DateTimeKind.Local), DepartmentId = 8, EmailAddress = "JFonnotto@attentigroup.com", FirstName = "John", IsManager = true, IsSiteManager = false, LastName = "Fonnotto", ReportsTo = 1, UserCreated = "system", UserUpdated = "system", Username = "JFonnotto" },
                        new { UserId = 4, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 119, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 119, DateTimeKind.Local), DepartmentId = 8, EmailAddress = "JNelson@attentigroup.com", FirstName = "Jeremy", IsManager = false, IsSiteManager = false, LastName = "Nelson", ReportsTo = 2, UserCreated = "system", UserUpdated = "system", Username = "JNelson" },
                        new { UserId = 5, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 119, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 119, DateTimeKind.Local), DepartmentId = 8, EmailAddress = "FBorcan@attentigroup.com", FirstName = "Fulviu", IsManager = false, IsSiteManager = false, LastName = "Borcan", ReportsTo = 3, UserCreated = "system", UserUpdated = "system", Username = "FBorcan" },
                        new { UserId = 6, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 119, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 119, DateTimeKind.Local), DepartmentId = 8, EmailAddress = "SCupstid@attentigroup.com", FirstName = "Scott", IsManager = false, IsSiteManager = false, LastName = "Cupstid", ReportsTo = 2, UserCreated = "system", UserUpdated = "system", Username = "SCupstid" },
                        new { UserId = 7, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 119, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 119, DateTimeKind.Local), DepartmentId = 8, EmailAddress = "MLocklear@attentigroup.com", FirstName = "Marita", IsManager = false, IsSiteManager = false, LastName = "Locklear", ReportsTo = 2, UserCreated = "system", UserUpdated = "system", Username = "MLocklear" },
                        new { UserId = 8, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 119, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 119, DateTimeKind.Local), DepartmentId = 8, EmailAddress = "PHickman@attentigroup.com", FirstName = "Phil", IsManager = false, IsSiteManager = false, LastName = "Hickman", ReportsTo = 3, UserCreated = "system", UserUpdated = "system", Username = "PHickman" },
                        new { UserId = 9, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 119, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 119, DateTimeKind.Local), DepartmentId = 8, EmailAddress = "GUkarande@attentigroup.com", FirstName = "Girish", IsManager = false, IsSiteManager = false, LastName = "Ukarande", ReportsTo = 2, UserCreated = "system", UserUpdated = "system", Username = "GUkarande" },
                        new { UserId = 10, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 119, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 119, DateTimeKind.Local), DepartmentId = 8, EmailAddress = "CGibson@attentigroup.com", FirstName = "Carla", IsManager = false, IsSiteManager = false, LastName = "Gibson", ReportsTo = 3, UserCreated = "system", UserUpdated = "system", Username = "CGibson" },
                        new { UserId = 11, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 119, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 119, DateTimeKind.Local), DepartmentId = 8, EmailAddress = "DBoyd@attentigroup.com", FirstName = "David", IsManager = false, IsSiteManager = false, LastName = "Boyd", ReportsTo = 3, UserCreated = "system", UserUpdated = "system", Username = "DBoyd" },
                        new { UserId = 12, DateCreated = new DateTime(2018, 12, 17, 11, 40, 36, 119, DateTimeKind.Local), DateUpdated = new DateTime(2018, 12, 17, 11, 40, 36, 119, DateTimeKind.Local), DepartmentId = 8, EmailAddress = "SManess@attentigroup.com", FirstName = "Shannon", IsManager = false, IsSiteManager = false, LastName = "Maness", ReportsTo = 2, UserCreated = "system", UserUpdated = "system", Username = "SManess" }
                    );
                });

            modelBuilder.Entity("TeamCalendarApp.Models.Event", b =>
                {
                    b.HasOne("TeamCalendarApp.Models.EventType", "EventType")
                        .WithMany("Events")
                        .HasForeignKey("EventTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TeamCalendarApp.Models.User")
                        .WithMany("Events")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("TeamCalendarApp.Models.User", b =>
                {
                    b.HasOne("TeamCalendarApp.Models.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
