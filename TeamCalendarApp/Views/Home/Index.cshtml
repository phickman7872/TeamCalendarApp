@{
    ViewData["Title"] = "Home Page";
}

<div class="container">
    <div id="calendar"></div>
</div>

<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title"><span id="eventTitle"></span></h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <button id="btnDelete" class="btn btn-danger btn-sm pull-right" data-toggle="confirmation">
                    <i class="fa fa-trash"></i>
                    Delete
                </button>
                <button id="btnEdit" class="btn btn-primary btn-sm pull-right" style="margin-right: 5px;">
                    <i class="fa fa-pencil"></i>
                    Edit
                </button>
                <p id="pDetails"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div id="myModalSave" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Save Event</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <form>
                    <input type="hidden" id="hdEventId" value="0" />
                    <div class="form-group">
                        <label for="ddlEventType">Event Type</label>
                        <select class="form-control" id="ddlEventType"></select>
                    </div>
                    <div class="form-group">
                        <label for="txtStart">Starts At</label>
                        <div class="input-group date" id="dtp1" data-target-input="nearest">
                            <input id="txtStart" type="text" class="form-control datetimepicker-input" data-target="#dtp1" />
                            <div class="input-group-append" data-target="#dtp1" data-toggle="datetimepicker">
                                <div class="input-group-text">
                                    <i class="fa fa-calendar"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="checkbox">
                            <label><input type="checkbox" id="chkIsFullDay" checked="checked" /> Is Full Day Event</label>
                        </div>
                    </div>
                    <div class="form-group" id="divEndDate" style="display: none;">
                        <label for="txtEnd">End</label>
                        <div class="input-group date" id="dtp2" data-target-input="nearest">
                            <input type="text" id="txtEnd" class="form-control datetimepicker-input" data-target="#dtp2" />
                            <div class="input-group-append" data-target="#dtp2" data-toggle="datetimepicker">
                                <div class="input-group-text">
                                    <i class="fa fa-calendar"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="txtDescription">Description</label>
                        <textarea id="txtDescription" rows="3" class="form-control"></textarea>
                    </div>
                    <button type="button" id="btnSave" class="btn btn-success">Save</button>
                    <button type="button" class="btn" data-dismiss="modal">Close</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            var events = [];
            var eventTypes = [];
            var selectedEvent = null;
            var username = '@User.Identity.Name.Split('\\')[1]';

            fetchEventsAndRenderCalendar();
            fetchEventTypes();

            $('[data-toggle=confirmation]').confirmation({
                rootSelector: '[data-toggle=confirmation]',
                onConfirm: function () {
                    if (selectedEvent !== null) {
                        $.ajax({
                            type: "DELETE",
                            url: "api/events/delete/" + selectedEvent.eventID,
                            success: function (status) {
                                if (status) {
                                    fetchEventsAndRenderCalendar();
                                    $('#myModal').modal('hide');
                                }
                            },
                            error: function () {
                                alert('Delete Failed');
                            }
                        })
                    }
                }
            });

            function fetchEventTypes() {
                eventTypes = [];

                $.ajax({
                    type: "GET",
                    url: "/api/eventtypes",
                    success: function (data) {
                        $.each(data, function (i, v) {
                            eventTypes.push({
                                eventTypeId: v.eventTypeId,
                                name: v.name,
                                description: v.description,
                                prefix: v.prefix,
                                themeColor: v.themeColor
                            });
                        })

                        loadEventTypes(eventTypes);
                    }
                })
            }

            function fetchEventsAndRenderCalendar() {
                events = [];

                $.ajax({
                    type: "GET",
                    url: "/api/events",
                    success: function (data) {
                        $.each(data, function (i, v) {
                            events.push({
                                eventID: v.eventId,
                                eventTypeId: v.eventTypeId,
                                username: v.username,
                                title: v.title,
                                description: v.description,
                                start: moment(v.startsAt),
                                end: v.endsAt != null ? moment(v.endsAt) : null,
                                allDay: v.isFullDay,
                                color: v.themeColor
                            });
                        })

                        generateCalendar(events);
                    },
                    error: function (error) {
                        alert('failed');
                    }
                })
            }

            function generateCalendar(events) {
                $('#calendar').fullCalendar('destroy');
                $('#calendar').fullCalendar({
                    defaultDate: new Date(),
                    timeFormat: 'h(:mm)a',
                    header: {
                        left: 'prev,next,today',
                        center: 'title',
                        right: 'month,basicWeek,basicDay,agenda'
                    },
                    eventLimit: true,
                    eventColor: 'green',
                    eventTextColor: 'white',
                    events: events,
                    eventClick: function (calEvent, jsEvent, view) {
                        selectedEvent = calEvent;

                        // Make sure the user has the ability to edit this record.
                        // If not, we need to disable the Edit/Remove buttons.
                        if (username !== selectedEvent.username) {
                            $('#myModal #btnDelete').prop('disabled', true);
                            $('#myModal #btnEdit').prop('disabled', true);
                        } else {
                            $('#myModal #btnDelete').prop('disabled', false);
                            $('#myModal #btnEdit').prop('disabled', false);
                        }

                        $('#myModal #eventTitle').text(calEvent.title);

                        var $description = $('<div/>');
                        $description.append($('<p/>').html('<b>Start: </b>' + calEvent.start.format("MM/DD/YYYY HH:mm A")));
                        if (calEvent.end != null) {
                            $description.append($('<p/>').html('<b>End: </b>' + calEvent.end.format("MM/DD/YYYY HH:mm A")));
                        }
                        $description.append($('<p/>').html('<b>Description: </b>' + calEvent.description));

                        $('#myModal #pDetails').empty().html($description);
                        $('#myModal').modal();
                    },
                    selectable: true,
                    select: function (start, end) {
                        selectedEvent = {
                            eventID: 0,
                            eventTypeId: 0,
                            username: '@User.Identity.Name.Split("\\")[1]',
                            title: '',
                            description: '',
                            start: start,
                            end: end,
                            allDay: false,
                            color: ''
                        };
                        openAddEditForm();

                        $('#calendar').fullCalendar('unselect');
                    },
                    editable: true,
                    eventDrop: function (event) {
                        var data = {
                            EventId: event.eventID,
                            EventTypeId: event.eventTypeId,
                            Username: event.username,
                            Title: event.title,
                            Description: event.description,
                            StartsAt: event.start.format('MM/DD/YYYY HH:mm A'),
                            EndsAt: event.end != null ? event.end.format('MM/DD/YYYY HH:mm A') : null,
                            ThemeColor: event.color,
                            IsFullDay: event.allDay
                        };

                        saveEvent(data);
                    },
                    displayEventTime: false
                })
            }

            $('#btnEdit').click(function () {
                openAddEditForm();
            });

            $('#dtp1, #dtp2').datetimepicker();

            $('#chkIsFullDay').change(function () {
                if ($(this).is(':checked')) {
                    $('#divEndDate').hide();
                } else {
                    $('#divEndDate').show();
                }
            });

            function openAddEditForm() {
                if (selectedEvent != null) {
                    $('#hdEventId').val(selectedEvent.eventID);
                    $('#ddlEventType').val(selectedEvent.eventTypeId.toString());
                    $('#txtStart').val(selectedEvent.start.format('MM/DD/YYYY HH:mm A'));
                    $('#chkIsFullDay').prop("checked", selectedEvent.allDay || false);
                    $('#chkIsFullDay').change();
                    $('#txtEnd').val(selectedEvent.end != null ? selectedEvent.end.format('MM/DD/YYYY HH:mm A') : '');
                    $('#txtDescription').val(selectedEvent.description);
                }

                $('#myModal').modal('hide');
                $('#myModalSave').modal();
            }

            $('#btnSave').click(function () {
                if ($('#txtStart').val().trim() == "") {
                    alert('Start date required!');
                    return;
                }

                if ($('#chkIsFullDay').is(':checked') == false && $('#txtEnd').val().trim() == "") {
                    alert('End date is required!');
                    return;
                } else {
                    var startDate = moment($('#txtStart').val(), "MM/DD/YYYY HH:mm A").toDate();
                    var endDate = moment($('#txtEnd').val(), "MM/DD/YYYY HH:mm A").toDate();

                    if (startDate > endDate) {
                        alert('Invalid end date!');
                        return;
                    }
                }

                var data = {
                    EventId: $('#hdEventId').val(),
                    EventTypeId: $('#ddlEventType').val().trim(),
                    Username: '@User.Identity.Name.Split("\\")[1]',
                    Title: '',
                    Description: $('#txtDescription').val(),
                    StartsAt: $('#txtStart').val().trim(),
                    EndsAt: $('#chkIsFullDay').is(':checked') ? null : $('#txtEnd').val().trim(),
                    ThemeColor: '',
                    IsFullDay: $('#chkIsFullDay').is(':checked')
                }

                saveEvent(data);
            })

            function saveEvent(data) {
                $.ajax({
                    type: "POST",
                    url: '/api/events',
                    data: JSON.stringify(data),
                    dataType: 'json',
                    contentType: 'application/json',
                    success: function (status) {
                        if (status) {
                            fetchEventsAndRenderCalendar();
                            $('#myModalSave').modal('hide');
                        }
                    },
                    error: function () {
                        alert('Save Failed!');
                    }
                })
            }

            function loadEventTypes(eventTypes) {
                var ddlEventType = document.getElementById('ddlEventType');

                for (var i = 0; i < eventTypes.length; i++) {
                    var option = document.createElement("OPTION");
                    var txt = document.createTextNode(eventTypes[i].name);

                    option.appendChild(txt);
                    option.setAttribute("value", eventTypes[i].eventTypeId);
                    ddlEventType.insertBefore(option, ddlEventType.lastChild);
                }
            }
        })
    </script>
}